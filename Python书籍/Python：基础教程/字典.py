#2.2创建字典和使用字典
items=[('name','ccc'),('age',24)]
d=dict(items)
print(d)
phonebook={'a':1,'b':2,'c':3}
print(phonebook)
d=dict(name='xu',age=42)
print(d)
#2.4字典方法
d={}
d['name']='cuaoo'
d['age']=42
print(d)
a=d.clear()
print(a)
print(d)
#考虑下面两种方法
x={}
y=x
x['value']=1
print(y)
x={}
print(y)

a={}
b=a
a['value']=1
print(b)
a.clear()
print(b)

#2.copy
x={'username':'admin','machine':['foo','bza','zoo']}
y=x.copy()
y['username']='lli'
y['machine'].remove('foo')
print(x)
print(y)
#副本中替换某值时，原本不受影响，但是修改了某个值（原地修改，不是替换）
#原本会受到影响
#避免这个问题可以使用deepcopy
from copy import deepcopy
d={}
d['names']=['Tom','Jerry']
c=d.copy()
dc=deepcopy(d)
d['names'].append('Mary')
print(c)
print(dc)
#3.fromkeys
#使用给定的键建立字典，键对应的值默认空值
a={}.fromkeys(['name','age'])
print(a)
#也可自己提供默认值
a=dict.fromkeys(['name','age'],'NA')
print(a)
#4.get
#当查询字典不存在的键时会报错，使用get就不会,还可自己添加默认值
d={}
print(d.get('name'))
print(d.get('name','NA'))
#5.items
#items将所有字典项以迭代器形式返回（键-值）
d={'name':'TOM','age':42,'sex':'male'}
print(d.items())
print(list(d.items()))
#6.keys和iterkeys
#7.pop
#获得给定键的值，并在原字典中删除
x={'a':1,'b':2,'c':3}
y=x.pop('a')
print(x)
print(y)
#8.popitem
#随机弹出字典的项
#9.setdefault
#键不存在时，返回默认值，并更新字典，键存在时，返回对应的值
#10.update
#用一个字典项更新另一个字典
x={'a':1,'b':2}
y={'a':123}
x.update(y)
print(x)
#11.values和itervalues


